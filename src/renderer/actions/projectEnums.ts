export enum ProjectsActionsEnum {
    RequestAllProjects = 'projects/REQUEST_ALL_PROJECTS',
    RequestAllProjectsError = 'projects/REQUEST_ALL_PROJECTS_ERROR',
    ReceiveAllProjects = 'projects/RECEIVE_ALL_PROJECTS',
    ReceiveStoredProjects = 'projects/RECEIVE_STORED_PROJECTS',
    ReceiveSingleProject = 'projects/RECEIVE_SINGLE_PROJECT',
    ReceiveAllProjectsProgress = 'projects/RECEIVE_ALL_PROJECTS_PROGRESS',
    RequestAllLocalProjects = 'projects/REQUEST_ALL_LOCAL_PROJECTS',
    RequestAllLocalProjectsError = 'projects/REQUEST_ALL_LOCAL_PROJECTS_ERROR',
    ReceiveAllLocalProjects = 'projects/RECEIVE_ALL_LOCAL_PROJECTS',
    ReceiveStoredLocalProjects = 'projects/RECEIVE_STORED_LOCAL_PROJECTS',
    ReceiveAllLocalProjectsProgress = 'projects/RECEIVE_ALL_LOCAL_PROJECTS_PROGRESS',
    RequestSingleLocalProjectStatus = 'projects/REQUEST_SINGLE_LOCAL_PROJECT_STATUS',
    RequestSingleLocalProjectStatusError = 'projects/REQUEST_SINGLE_LOCAL_PROJECT_STATUS_ERROR',
    LocalProjectStatus = 'projects/RECEIVE_SINGLE_LOCAL_PROJECT_STATUS',
    DeleteUntrackedFilesForLocalProject = 'projects/DELETE_UNTRACKED_FILES_FOR_LOCAL_PROJECT',
    DeleteUntrackedFilesForLocalProjectError = 'projects/DELETE_UNTRACKED_FILES_FOR_LOCAL_PROJECT_ERROR',
    DiscardSelectedChangesForLocalProject = 'projects/DISCARD_SELECTED_CHANGES_FOR_LOCAL_PROJECT',
    DiscardSelectedChangesForLocalProjectError = 'projects/DISCARD_SELECTED_CHANGES_FOR_LOCAL_PROJECT_ERROR',
    SetProjectsFilter = 'projects/SET_PROJECTS_FILTER',
    RemoveLocalProject = 'projects/REMOVE_LOCAL_PROJECT',
    RemoveLocalProjectError = 'projects/REMOVE_LOCAL_PROJECT_ERROR',
    UpdateLocalProject = 'projects/UPDATE_LOCAL_PROJECT',
    UpdateLocalProjectError = 'projects/UPDATE_LOCAL_PROJECT_ERROR',
    CheckoutLocalProject = 'projects/CHECKOUT_LOCAL_PROJECT',
    CheckoutLocalProjectError = 'projects/CHECKOUT_LOCAL_PROJECT_ERROR',
    PushLocalProject = 'projects/PUSH_LOCAL_PROJECT',
    PushLocalProjectError = 'projects/PUSH_LOCAL_PROJECT_ERROR',
    CheckoutMasterBranchForLocalProject = 'projects/CHECKOUT_LOCAL_PROJECT_MASTER_BRANCH',
    CheckoutMasterBranchForLocalProjectError = 'projects/CHECKOUT_LOCAL_PROJECT_MASTER_BRANCH_ERROR',
    CleanLocalProjectFolder = 'projects/CLEAN_LOCAL_PROJECT_FOLDER',
    CleanLocalProjectFolderError = 'projects/CLEAN_LOCAL_PROJECT_FOLDER_ERROR',
    OpenTortoiseGitCommitDialog = 'projects/OPEN_TORTOISE_GIT_COMMIT_DIALOG',
}
